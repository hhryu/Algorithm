import java.util.*;

public class Solution {
    private static final int MATRIX_LENGTH = 100;

    public static void main(String args[]) {
        Scanner input = new Scanner(System.in);
        int testcase = 0;

        while (testcase < 10) {
            testcase = Integer.parseInt(input.nextLine());
            int[][] matrix = new int[MATRIX_LENGTH][MATRIX_LENGTH];

            for (int i = 0; i < MATRIX_LENGTH; i++) {
                StringTokenizer st = new StringTokenizer(input.nextLine());

                for (int j = 0; j < MATRIX_LENGTH; j++) {
                    matrix[i][j] = Integer.parseInt(st.nextToken());
                }
            }

            int divisionPoint = MATRIX_LENGTH / 2;
            int endIndex = -1;
            for (int i = 0; i < divisionPoint; i++) {
                if(matrix[MATRIX_LENGTH-1][divisionPoint-i-1] == 2) endIndex = divisionPoint-i-1;
                else if(matrix[MATRIX_LENGTH-1][divisionPoint+i] == 2) endIndex = divisionPoint+i;
            }

            int rowIndex = MATRIX_LENGTH-1;
            int columnIndex = endIndex;

            boolean wasLeft = false;
            boolean wasRight = false;

            while(true) {
                if(columnIndex > 0 && !wasRight && matrix[rowIndex][columnIndex-1] == 1) {
                    columnIndex--;
                    wasLeft = true;

                } else if(columnIndex < MATRIX_LENGTH-1 && !wasLeft && matrix[rowIndex][columnIndex+1] == 1) {
                    columnIndex++;
                    wasRight = true;

                } else if(rowIndex > 0 && matrix[rowIndex-1][columnIndex] == 1) {
                    rowIndex--;
                    wasLeft = wasRight = false;

                } else {
                    System.out.println("#" + testcase + " " + columnIndex);
                    break;
                }
            }
        }
    }
}
